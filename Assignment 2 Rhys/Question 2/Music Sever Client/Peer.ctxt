#BlueJ class context
comment0.params=
comment0.target=Peer()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Peer.\ The\ constructor\ sets\ the\ file\ name,\ sets\ the\ default\r\n\ connection\ status\ to\ offline,\ and\ initialises\ the\ array\ list\ of\ songs,\ before\ updating\ the\r\n\ list\ from\ file.\r\n\ \r\n\ @param\ \ \ \ \ \ \ fileName\ \ \ \ Name\ of\ the\ file\ which\ holds,\ or\ will\ hold\ that\ peer's\ song\ list\r\n\ @return\ \ \ \ \ \ Peer\ \r\n
comment1.params=
comment1.target=java.lang.String\ findName()
comment1.text=\r\n\ Method\ to\ find\ the\ name\ of\ the\ peer\ or\ set\ it\ equal\ to\ unnamed\r\n\ \r\n\ @param\ \ \ \ \ \ \ void\r\n\ @return\ \ \ \ \ \ String\ \ \ \ \ Either\ the\ name\ found\ from\ the\ file\ or\ a\ message\ that\ a\ name\ is\ needed\r\n
comment10.params=message
comment10.target=void\ sendMessage(java.lang.String)
comment10.text=\r\n\ Attempt\ to\ send\ a\ message\ to\ the\ server\r\n\ \r\n\ @param\ \ \ \ \ \ \ message\ \ \ \ \ The\ string\ message\ that\ is\ to\ be\ sent\ to\ the\ server\r\n\ @return\ \ \ \ \ \ void\r\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\r\n\ Controls\ the\ console\ interactions\ with\ the\ user\r\n\ \r\n\ @param\ \ \ \ \ \ \ args\ \ \ \ An\ array\ of\ strings.\ The\ first\ of\ these\ is\ all\ thats\ used\ and\ is\ the\ server\ IP\r\n\ @return\ \ \ \ \ \ void\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ Method\ to\ get\ the\ name\ of\ the\ peer\r\n\ \r\n\ @param\ \ \ \ \ \ \ void\r\n\ @return\ \ \ \ \ \ String\ \ \ \ \ \ listFileName\r\n
comment3.params=name
comment3.target=void\ setName(java.lang.String)
comment3.text=\r\n\ Method\ to\ set\ the\ name\ of\ the\ peer\ and\ attempt\ to\ write\ it\ to\ file\r\n\ \r\n\ @param\ \ \ \ \ \ \ name\ \ \ \ \ \ \ \ The\ name\ that\ is\ to\ be\ used\ as\ the\ peers\ name\r\n\ @return\ \ \ \ \ \ void\r\n
comment4.params=ol
comment4.target=void\ setOnline(java.lang.Boolean)
comment4.text=\r\n\ Method\ to\ set\ whether\ or\ not\ a\ peer\ is\ online\r\n\ \r\n\ @param\ \ \ \ \ \ \ ol\ \ \ \ \ \ Whether\ or\ not\ this\ peer\ is\ online\r\n\ @return\ \ \ \ \ \ void\r\n
comment5.params=add
comment5.target=void\ setAddress(java.lang.String)
comment5.text=\r\n\ Method\ to\ set\ the\ current\ address\ of\ the\ server\r\n\ \r\n\ @param\ \ \ \ \ \ \ add\ \ \ \ \ \ The\ address\ of\ the\ peer\r\n\ @return\ \ \ \ \ \ void\r\n
comment6.params=
comment6.target=java.lang.Boolean\ getOnline()
comment6.text=\r\n\ Method\ to\ get\ whether\ or\ not\ a\ peer\ is\ online\r\n\ \r\n\ @param\ \ \ \ \ \ \ void\r\n\ @return\ \ \ \ \ \ Boolean\ \ \ \ Whether\ or\ not\ this\ peer\ is\ online\r\n
comment7.params=
comment7.target=java.lang.Boolean\ listen()
comment7.text=\r\n\ Method\ tells\ the\ listener\ whether\ or\ not\ to\ keep\ listening\r\n\ \r\n\ @param\ \ \ \ \ \ \ void\r\n\ @return\ \ \ \ \ \ Boolean\ \ \ \ Whether\ or\ not\ to\ keep\ listening\r\n
comment8.params=
comment8.target=java.lang.String\ getAddress()
comment8.text=\r\n\ Method\ to\ get\ the\ server\ address\r\n\ \r\n\ @param\ \ \ \ \ \ \ void\r\n\ @return\ \ \ \ \ \ String\ \ \ \ \ \ The\ address\ of\ the\ peer\r\n
comment9.params=
comment9.target=java.lang.String\ getSongList()
comment9.text=\r\n\ Method\ to\ get\ the\ String\ containing\ all\ of\ the\ peers\ songs\r\n\ \r\n\ @param\ \ \ \ \ \ \ void\r\n\ @return\ \ \ \ \ \ String\ \ \ \ \ \ All\ the\ peers\ songs\ seperated\ by\ "-"\r\n
numComments=12
