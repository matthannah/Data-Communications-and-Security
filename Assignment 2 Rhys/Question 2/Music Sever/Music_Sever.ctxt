#BlueJ class context
comment0.params=
comment0.target=Music_Sever()
comment0.text=\r\n\ The\ constructor\ for\ the\ Music_sever\ class.\ Sets\ up\ the\ peer\ list\ as\ a\ new\ Array\ List\r\n\ and\ then\ sets\ fileName\ to\ the\ text\ file\ used\ to\ store\ peers.\ This\ is\ always\ the\ same\r\n\ which\ is\ why\ is\ can\ be\ set\ here.\ It\ then\ updates\ the\ peer\ list\ based\ on\ its\ file.\r\n\ \r\n\ @param\ \ \ \ \ \ \ void\r\n\ @return\ \ \ \ \ \ Music_Sever\ \r\n
comment1.params=
comment1.target=void\ updatePeerListFile()
comment1.text=\r\n\ Reads\ form\ file\ the\ list\ of\ peers\ that\ the\ server\ knows\ about\ and\ adds\ them\ to\ it's\ array\ list\r\n\ which\ is\ used\ to\ keep\ track\ of\ peers\ through\ the\ program.\ Also\ establishes\ a\ connection\ to,\ or\ creates\r\n\ if\ it's\ not\ present,\ the\ peer\ list\ text\ file.\r\n\ \r\n\ @param\ \ \ \ \ \ \ void\r\n\ @return\ \ \ \ \ \ void\ \r\n
comment2.params=peer
comment2.target=java.lang.Boolean\ hasPeer(Peer)
comment2.text=\r\n\ Checks\ to\ see\ if\ the\ peer\ list\ already\ contains\ a\ peer\ with\ the\ same\ name.\r\n\ \r\n\ @param\ \ \ \ \ \ \ p\ \ \ \ \ \ \ \ \ \ \ A\ newly\ created\ peer\ that\ will\ potentially\ be\ added\ to\ the\ peer\ list\r\n\ @return\ \ \ \ \ \ Boolean\ \ \ \ \ A\ true\ false\ value\ to\ represent\ whether\ or\ not\ that\ peer\ name\ is\ listed\ \ \r\n
comment3.params=peerName
comment3.target=Peer\ getPeer(java.lang.String)
comment3.text=\r\n\ Searches\ the\ peer\ list\ for\ a\ particular\ peer\r\n\ \r\n\ @param\ \ \ \ \ \ \ peer\ \ \ \ The\ name\ of\ a\ peer\ with\ in\ system\r\n\ @return\ \ \ \ \ \ Peer\ \ \ \ The\ peer\ object\ for\ the\ peer\ with\ the\ searched\ for\ name\ \ \ \ \r\n
comment4.params=peerAddress
comment4.target=Peer\ getPeerByAddress(java.lang.String)
comment4.text=\r\n\ Searches\ the\ peer\ list\ for\ a\ particular\ peer\ based\ on\ its\ address\ \r\n\ \r\n\ @param\ \ \ \ \ \ \ peer\ \ \ \ The\ address\ of\ a\ peer\ with\ the\ system\r\n\ @return\ \ \ \ \ \ Peer\ \ \ \ The\ peer\ object\ for\ the\ peer\ with\ the\ searched\ for\ address\ \ \ \ \r\n
comment5.params=currentPeerName\ address
comment5.target=java.lang.String\ peerOnline(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Checks\ if\ a\ peer\ is\ already\ know\ and\ if\ so\ sets\ them\ thier\ online\ to\ true.\ If\ not\ it\ gives\ them\ a\ new\r\n\ name,\ adds\ it\ to\ the\ peer\ list.\ Then\ returns\ the\ name\ and\ listening\ port\ for\ that\ peer.\ \r\n\ \r\n\ @param\ \ \ currentPeerName\ The\ suggested\ name\ of\ a\ peer.\ If\ it\ is\ unnamed\ this\ function\ will\ make\ a\ name\ \r\n\ @return\ \ String\ \ \ \ \ \ \ \ \ \ A\ true\ false\ value\ to\ represent\ whether\ or\ not\ that\ peer\ name\ is\ listed\ \ \r\n
comment6.params=
comment6.target=java.lang.Boolean\ listen()
comment6.text=\r\n\ Tells\ the\ message\ listener\ whether\ or\ not\ it\ should\ keep\ listening\r\n\ \r\n\ @param\ \ \ void\ \r\n\ @return\ \ Boolean\ \ \ \ \ Whether\ or\ not\ the\ message\ listener\ should\ keep\ listening\ \ \r\n
comment7.params=
comment7.target=java.lang.String\ getAllSongs()
comment7.text=\r\n\ Generates\ and\ returns\ a\ list\ of\ all\ the\ available\ songs\r\n\ \r\n\ @param\ \ \ void\ \r\n\ @return\ \ String\ \ \ \ \ A\ string\ containing\ all\ the\ songs\ available\ seperated\ by\ a\ "-"\ symbol\ \ \r\n
comment8.params=songTitle
comment8.target=java.lang.String\ getSong(java.lang.String)
comment8.text=\r\n\ Searches\ all\ peers\ for\ a\ particular\ song\ and\ then\ returns\ the\ address\ of\ a\ peer\ who\ has\ it\r\n\ \r\n\ @param\ \ \ songTitle\ \ \ The\ title\ of\ a\ song\ that\ the\ client\ wants\ to\ download\r\n\ @return\ \ String\ \ \ \ \ \ The\ address\ of\ a\ client\ who\ has\ that\ song\ \r\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
numComments=10
